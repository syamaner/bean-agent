{
  "name": "Autonomous Coffee Roast - Working",
  "nodes": [
    {
      "parameters": {},
      "id": "trigger-start",
      "name": "Start Roast",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://genai-7175210165555426.uk.auth0.com/oauth/token",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "client_id", "value": "Jk3aF2NfkiiOIXY0eHJQxfA6jkP0Pjf7"},
            {"name": "client_secret", "value": "05agLnSUZceYK2Yl9bYGGnV_zuy7EAJ9ZWnMuOpCHEIOx2v8xZ7XNAmsQW020m2k"},
            {"name": "audience", "value": "https://coffee-roasting-api"},
            {"name": "grant_type", "value": "client_credentials"}
          ]
        }
      },
      "id": "get-token",
      "name": "Get Auth0 Token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [460, 400]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {"id": "token-var", "name": "auth_token", "value": "={{ $json.access_token }}", "type": "string"},
            {"id": "loop-counter", "name": "iteration", "value": "0", "type": "number"},
            {"id": "roast-phase", "name": "phase", "value": "starting", "type": "string"}
          ]
        }
      },
      "id": "init-vars",
      "name": "Initialize State",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [680, 400]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.iteration }}",
              "rightValue": 180,
              "operator": {
                "type": "number",
                "operation": "smaller"
              }
            },
            {
              "id": "condition-2",
              "leftValue": "={{ $json.phase }}",
              "rightValue": "complete",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "check-continue",
      "name": "Continue Loop?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "amount": 10,
        "unit": "seconds"
      },
      "id": "wait-node",
      "name": "Wait 10s",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [1120, 300],
      "webhookId": "autonomous-roast-wait"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {"id": "increment", "name": "iteration", "value": "={{ $json.iteration + 1 }}", "type": "number"},
            {"id": "elapsed", "name": "elapsed_seconds", "value": "={{ $json.iteration * 10 }}", "type": "number"},
            {"id": "elapsed-min", "name": "elapsed_minutes", "value": "={{ Math.floor(($json.iteration * 10) / 60) }}", "type": "number"}
          ]
        }
      },
      "id": "update-state",
      "name": "Update State",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Roast iteration {{ $json.iteration }} ({{ $json.elapsed_minutes }}:{{ String(($json.iteration * 10) % 60).padStart(2, '0') }}).\n\n1. Check roaster status (read_roaster_status)\n2. Check first crack (get_first_crack_status)\n3. Current phase: {{ $json.phase }}\n4. Make adjustments or end roast\n\nRespond with: status + actions taken.",
        "options": {
          "systemMessage": "You are an autonomous coffee roasting system.\n\nMCP Tools:\n- read_roaster_status: Get temps, RoR, sensors\n- get_first_crack_status: Check FC detection\n- set_heat, set_fan: Adjust roaster\n- start_roaster, drop_beans, start_cooling\n\nPhases:\n1. starting → preheat\n2. preheating → heat 100%, monitor to 180°C\n3. ready → waiting for beans\n4. drying → building heat\n5. maillard → RoR 5-8°C/min\n6. first_crack → reduce heat when detected\n7. development → 15-20% post-FC\n8. complete → beans dropped\n\nRules:\n- Start roaster if not running\n- Start FC detection early\n- After FC: heat 60-70%, fan 40-50%\n- Drop at 195-200°C (light)\n- Max bean temp: 205°C\n\nBe concise. Take action each iteration."
        }
      },
      "id": "ai-agent",
      "name": "AI Roast Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [1560, 300]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {"maxTokens": 1500, "temperature": 0.3}
      },
      "id": "openai-model",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [1560, 80],
      "credentials": {
        "openAiApi": {"id": "openai-credential", "name": "OpenAi account"}
      }
    },
    {
      "parameters": {
        "endpointUrl": "http://host.docker.internal:5002/sse",
        "authentication": "bearerAuth"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.2,
      "position": [1800, 200],
      "id": "mcp-roaster",
      "name": "Roaster Control MCP",
      "credentials": {
        "httpBearerAuth": {"id": "auth0-bearer", "name": "Auth0 Bearer"}
      }
    },
    {
      "parameters": {
        "endpointUrl": "http://host.docker.internal:5001/sse",
        "authentication": "bearerAuth"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.2,
      "position": [1800, 400],
      "id": "mcp-detector",
      "name": "First Crack Detection MCP",
      "credentials": {
        "httpBearerAuth": {"id": "auth0-bearer", "name": "Auth0 Bearer"}
      }
    },
    {
      "parameters": {"contextWindowLength": 20},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [1680, 80],
      "id": "memory-buffer",
      "name": "Agent Memory"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "assignments": {
          "assignments": [
            {"id": "preserve-token", "name": "auth_token", "value": "={{ $('Initialize State').item.json.auth_token }}", "type": "string"},
            {"id": "preserve-iteration", "name": "iteration", "value": "={{ $json.iteration }}", "type": "number"},
            {"id": "update-phase", "name": "phase", "value": "={{ $json.output.includes('complete') || $json.output.includes('dropped') ? 'complete' : $json.phase || 'active' }}", "type": "string"},
            {"id": "agent-response", "name": "response", "value": "={{ $json.output }}", "type": "string"}
          ]
        }
      },
      "id": "preserve-state",
      "name": "Preserve Loop State",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [1800, 300]
    },
    {
      "parameters": {
        "content": "=## ✅ Roast Complete!\n\nIterations: {{ $json.iteration }}\nTime: {{ Math.floor(($json.iteration * 10) / 60) }}:{{ String(($json.iteration * 10) % 60).padStart(2, '0') }}\n\n{{ $json.response }}",
        "height": 300,
        "width": 500
      },
      "id": "complete-note",
      "name": "Roast Complete",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1120, 520]
    }
  ],
  "connections": {
    "Start Roast": {"main": [[{"node": "Get Auth0 Token", "type": "main", "index": 0}]]},
    "Get Auth0 Token": {"main": [[{"node": "Initialize State", "type": "main", "index": 0}]]},
    "Initialize State": {"main": [[{"node": "Continue Loop?", "type": "main", "index": 0}]]},
    "Continue Loop?": {
      "main": [
        [{"node": "Wait 10s", "type": "main", "index": 0}],
        [{"node": "Roast Complete", "type": "main", "index": 0}]
      ]
    },
    "Wait 10s": {"main": [[{"node": "Update State", "type": "main", "index": 0}]]},
    "Update State": {"main": [[{"node": "AI Roast Agent", "type": "main", "index": 0}]]},
    "AI Roast Agent": {"main": [[{"node": "Preserve Loop State", "type": "main", "index": 0}]]},
    "Preserve Loop State": {"main": [[{"node": "Continue Loop?", "type": "main", "index": 0}]]},
    "OpenAI Chat Model": {"ai_languageModel": [[{"node": "AI Roast Agent", "type": "ai_languageModel", "index": 0}]]},
    "Roaster Control MCP": {"ai_tool": [[{"node": "AI Roast Agent", "type": "ai_tool", "index": 0}]]},
    "First Crack Detection MCP": {"ai_tool": [[{"node": "AI Roast Agent", "type": "ai_tool", "index": 0}]]},
    "Agent Memory": {"ai_memory": [[{"node": "AI Roast Agent", "type": "ai_memory", "index": 0}]]}
  },
  "active": false,
  "settings": {"executionOrder": "v1"}
}
