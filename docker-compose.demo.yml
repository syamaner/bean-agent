version: '3.8'

services:
  roaster-control:
    build:
      context: .
      dockerfile: Dockerfile.roaster-control
    environment:
      # Demo mode configuration
      DEMO_MODE: "true"
      DEMO_SCENARIO: "quick_roast"  # or "medium_roast", "light_roast"
      
      # Auth0 configuration (required even in demo mode)
      AUTH0_DOMAIN: "${AUTH0_DOMAIN}"
      AUTH0_AUDIENCE: "${AUTH0_AUDIENCE}"
      AUTH0_CLIENT_ID: "${AUTH0_CLIENT_ID}"
      AUTH0_CLIENT_SECRET: "${AUTH0_CLIENT_SECRET}"
      
      # Server configuration
      PORT: "8001"
      LOG_LEVEL: "INFO"
    ports:
      - "8001:8001"
    networks:
      - mcp-demo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  first-crack-detection:
    build:
      context: .
      dockerfile: Dockerfile.fc-detection
    environment:
      # Demo mode configuration (shared scenario with roaster)
      DEMO_MODE: "true"
      DEMO_SCENARIO: "quick_roast"
      
      # Auth0 configuration
      AUTH0_DOMAIN: "${AUTH0_DOMAIN}"
      AUTH0_AUDIENCE: "${AUTH0_AUDIENCE}"
      AUTH0_CLIENT_ID: "${AUTH0_CLIENT_ID}"
      AUTH0_CLIENT_SECRET: "${AUTH0_CLIENT_SECRET}"
      
      # Server configuration
      PORT: "8002"
      LOG_LEVEL: "INFO"
    ports:
      - "8002:8002"
    networks:
      - mcp-demo
    depends_on:
      - roaster-control
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  mcp-demo:
    driver: bridge
